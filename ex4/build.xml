<?xml version="1.0"?>
<!--
    @author Yoan Blanc <yoan.blanc@epfl.ch>
-->
<project name="ex5" default="run" basedir=".">
    <!-- required by `for` -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="../lib/ant-contrib.jar"/>
        </classpath>
    </taskdef>


    <property name="src.dir" location="src"/>
    <property name="bin.dir" location="bin"/>
    <property name="doc.dir" location="doc"/>

    <property name="lib.dir" location="../lib"/>

    <property name="agent0" value="random" />
    <property name="agent1" value="${agent0}" />
    <!--<property name="agent2" value="${agent1}" />-->

    <property name="template" value="auction.xml" />

    <tstamp>
        <format property="now" pattern="yyyyMMddHHmmss"/>
    </tstamp>
    <property name="tournament" value="${now}" />

    <!--  All agents
    <property name="agents" value="Greedy,Picsou,Paperino,Huey,Dewey,Louie" /> -->
    <property name="agents" value="Picsou,Paperino,Huey,Dewey,Louie" />
    <property name="templates" value="auction.xml,auction2.xml,auction3.xml" />

    <path id="logist.path">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
            <!-- use logist2 instead -->
            <exclude name="logist.jar" />
        </fileset>
    </path>

    <target name="clean">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${bin.dir}"/>
        </delete>
    </target>

    <target name="compile">
        <mkdir dir="${bin.dir}/class"/>
        <javac srcdir="${src.dir}"
               destdir="${bin.dir}/class"
               includeantruntime="false"
               debug="on">
            <compilerarg value="-Xlint"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${lib.dir}/logist.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="jars" depends="clean, compile">
        <mkdir dir="${bin.dir}/jar"/>
        <for list="${agents}" param="jar">
            <sequential>
                <jar destfile="${bin.dir}/jar/@{jar}.jar">
                    <fileset dir="${bin.dir}/class">
                        <include name="g16/plan/*"/>
                        <include name="g16/AuctionBentina*"/>
                        <include name="g16/*@{jar}*"/>
                    </fileset>
                </jar>
            </sequential>
        </for>
        <!-- This one is just dumb.
        <jar destfile="${bin.dir}/jar/Template.jar">
            <fileset dir="${bin.dir}/class">
                <include name="template/*Template*"/>
            </fileset>
        </jar>-->
    </target>

    <target name="run" depends="compile">
        <java fork="true" classname="logist.LogistPlatform">
            <jvmarg value="-Djava.util.logging.config.file=logging.properties" />
            <arg value="config/${template}"/>
            <arg value="auction-${agent0}" />
            <arg value="auction-${agent1}" />
            <!--<arg value="auction-${agent2}" />-->
            <classpath>
                <pathelement path="${java.class.path}"/>
                <path refid="logist.path"/>
            </classpath>
        </java>
    </target>

    <target name="-tournament-clean">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="tournament/${tournament}"/>
        </delete>
    </target>

    <target name="-tournament-new">
        <java fork="true" classname="logist.LogistPlatform">
            <arg value="-new" />
            <arg value="${tournament}" />
            <arg value="${bin.dir}/jar" />
            <classpath>
                <pathelement path="${java.class.path}"/>
                <path refid="logist.path"/>
            </classpath>
        </java>
    </target>

    <target name="-tournament-run">
        <java fork="true" classname="logist.LogistPlatform">
            <arg value="-run" />
            <arg value="${tournament}" />
            <arg value="${template}" />
            <classpath>
                <pathelement path="${java.class.path}"/>
                <path refid="logist.path"/>
            </classpath>
        </java>
    </target>

    <target name="-tournament-score">
        <java fork="true" classname="logist.LogistPlatform">
            <arg value="-score" />
            <arg value="${tournament}" />
            <classpath>
                <pathelement path="${java.class.path}"/>
                <path refid="logist.path"/>
            </classpath>
        </java>
    </target>

    <target name="tournament" depends="jars">
        <antcall target="-tournament-clean" />
        <antcall target="-tournament-new" />
        <for list="${templates}" param="tpl">
            <sequential>
                <antcall target="-tournament-run">
                    <param name="template" value="config/@{tpl}" />
                </antcall>
            </sequential>
        </for>
        <antcall target="-tournament-score" />
        <loadfile property="result" srcfile="tournament/${tournament}/results.txt" />
        <echo message="${result}" />
    </target>

    <target name="deliver" depends="compile">
        <property name="zip.dir" value="${bin.dir}/blanc-signo-${ant.project.name}"/>
        <mkdir dir="${zip.dir}"/>
        <copy file="build.xml" todir="${zip.dir}"/>
        <copy todir="${zip.dir}/doc">
            <fileset dir="doc">
                <exclude name="**/*.log"/>
                <exclude name="**/*.aux"/>
                <exclude name="**/*.out"/>
            </fileset>
        </copy>
        <copy todir="${zip.dir}/src">
            <fileset dir="src"/>
        </copy>
        <copy todir="${zip.dir}/config">
            <fileset dir="config"/>
        </copy>
        <copy todir="${zip.dir}" file="history.xml"/>
        <zip destfile="blanc-signo-${ant.project.name}.zip"
             basedir="${bin.dir}"
             excludes="class/**">
        </zip>
        <delete dir="${zip.dir}"/>
        <echo message="blanc-signo-${ant.project.name}.zip generated. `unzip -l` to check its content."/>
    </target>
</project>
